swagger: "2.0"
info:
  description: "This is the API spec for eskalope"
  version: "1.0.0"
  title: "Eskalope Swagger API"
  termsOfService: ""
  contact:
    email: "team@eskalope.de"
  license:
    name: "Commercial"
host: "localhost:8080"
basePath: "/v1"
tags:
- name: "quests"
  description: "Eskalope Quests"
schemes:
- "https"
- "http"
paths:
  /quest/:
    get:
      tags:
      - "quests"
      summary: "Finds newest quests"
      description: "sorted by date"
      operationId: "findQuestByCreadate"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Quests"
        "400":
          description: "Invalid status value"
      security:
      - queststore_auth:
        - "write:quests"
        - "read:quests"
    post:
      tags:
      - "quest"
      summary: "Add a new quest"
      description: "Inserts new quest into database"
      operationId: "addQuest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Quest object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Quest"
      responses:
        "405":
          description: "Invalid input"
      security:
      - queststore_auth:
        - "write:quests"
        - "read:quests"
  /quest/findByName:
    get:
      tags:
      - "quest"
      summary: "Finds quest by name"
      description: "Provide search string"
      operationId: "findQuestByName"
      produces:
      - "application/json"
      parameters:
      - name: "questname"
        in: "query"
        description: "Search string for name"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Quests"
        "400":
          description: "Invalid status value"
      security:
      - queststore_auth:
        - "write:quests"
        - "read:quests"
  /quest/{questId}:
    get:
      tags:
      - "quest"
      summary: "Find quest by ID"
      description: "Returns a single quest"
      operationId: "getQuestById"
      produces:
      - "application/json"
      parameters:
      - name: "questId"
        in: "path"
        description: "ID of quest to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Quest"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Quest not found"
      security:
      - api_key: []
    put:
      tags:
      - "quest"
      summary: "Update an existing quest"
      description: ""
      operationId: "updateQuest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Quest object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Quest"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Quest not found"
        "405":
          description: "Validation exception"
      security:
      - queststore_auth:
        - "write:quests"
        - "read:quests" 
    delete:
      tags:
      - "quest"
      summary: "Delete a quest"
      description: ""
      operationId: "deleteQuest"
      produces:
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "questId"
        in: "path"
        description: "quest id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "quest not found"
      security:
      - queststore_auth:
        - "write:quests"
        - "read:quests"
securityDefinitions:
  queststore_auth:
    type: "oauth2"
    authorizationUrl: "http://localhost/oauth/dialog"
    flow: "implicit"
    scopes:
      write:quests: "modify quests in your account"
      read:quests: "read your quests"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Quest:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name: 
        type: "string" 